/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE <10.
 * Add the correct display in Edge, IE, and Firefox for `details` or `summary`.
 * Add the correct display in IE for `main`.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * Add the correct display in IE <10.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display and remove excess height in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE <11, Safari <8, and Firefox <22.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox <40.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre,
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android <4.4.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  /* Set 1 unit of vertical rhythm on the top and bottom margins. */
  margin: 0.75em 0; }

/**
 * Add the correct background and color in IE <10.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE <11.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1.5em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * Known issues:
 * - By default, Chrome on OS X and Safari on OS X allow very limited styling of
 *   select, unless a border property is set. The default font weight on
 *   optgroup elements cannot safely be changed in Chrome on OSX and Safari on
 *   OS X.
 * - It is recommended that you do not style checkbox and radio inputs as
 *   Firefox's implementation does not respect box-sizing, padding, or width.
 * - Certain font size values applied to number inputs cause the cursor style of
 *   the decrement button to change from default to text.
 * - The search input is not fully stylable by default. In Chrome and Safari on
 *   OSX/iOS you can't control font, padding, border, or background. In Chrome
 *   and Safari on Windows you can't control border properly. It will apply
 *   border-width but will only show a border color (which cannot be controlled)
 *   for the outer 1px of that border. Applying -webkit-appearance: textfield
 *   addresses these issues without removing the benefits of search inputs (e.g.
 *   showing past searches). Safari (but not Chrome) will clip the cancel button
 *   on when it has padding (and textfield appearance).
 */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 * 3. Address `font-family` inconsistency between `textarea` and other form in IE 7
 * 4. Improve appearance and consistency with IE 6/7.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 */
button {
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
   * Remove the inner border and padding in Firefox.
   */
  /**
   * Restore the focus styles unset by the previous rule.
   */ }
  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0; }
  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText; }

/**
 * Show the overflow in Edge.
 */
input {
  overflow: visible; }

/**
 * 1. Add the correct box sizing in IE <11.
 * 2. Remove the padding in IE <11.
 * 3. Remove excess padding in IE 7.
 *    Known issue: excess padding remains in IE 6.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
   * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
   */ }
  [type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 * 4. Correct alignment displayed oddly in IE 6/7.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  white-space: normal;
  /* 1 */
  color: inherit;
  /* 2 */
  padding: 0;
  /* 3 */ }

/**
 * Restore the font weight unset by a previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

@font-face {
  font-family: MyriadPro;
  src: url("../font/MyriadPro-Cond.otf"); }

body {
  background: #576366; }

.error {
  position: absolute;
  bottom: 12px;
  font-size: 10px;
  right: 12px;
  color: red; }

* {
  font-size: 16px;
  color: #666;
  font-weight: 500;
  margin: 0;
  box-sizing: border-box; }

.form-container {
  background: #fff;
  border-radius: 5px;
  width: 100%;
  max-width: 435px;
  margin: 40px auto;
  font-family: Tahoma, serif;
  text-align: center;
  padding: 20px; }
  .form-container .close {
    background: #d1e0e4;
    color: #fff;
    border-radius: 100%;
    font-family: Arial, serif;
    width: 27px;
    height: 27px;
    line-height: 27px;
    font-weight: 400;
    display: block;
    float: right;
    cursor: pointer;
    text-align: center; }
  .form-container .title {
    clear: both;
    width: 250px;
    margin: 0 auto; }
    .form-container .title h2 {
      font-size: 36px;
      margin: 0 0 15px 0;
      font-family: MyriadPro, serif;
      line-height: 28px; }
  .form-container form {
    max-width: 250px;
    margin: 30px auto 30px auto; }
    .form-container form .form-group-text {
      position: relative;
      padding: 0 5px; }
      .form-container form .form-group-text input {
        width: 100%;
        height: 54px;
        line-height: 54px;
        padding: 0 15px;
        color: #666;
        font-size: 16px;
        margin-bottom: 10px;
        border: 1px solid #d1e0e4;
        border-radius: 5px; }
        .form-container form .form-group-text input + span {
          position: absolute;
          line-height: 54px;
          padding: 0 15px;
          color: #666;
          font-size: 16px;
          border-radius: 5px;
          left: 7px;
          text-align: left;
          top: 0;
          -webkit-transition: 0.5s;
          transition: 0.5s;
          -webkit-transform-origin: top;
                  transform-origin: top; }
        .form-container form .form-group-text input:focus + span {
          -webkit-transform: scale(0);
                  transform: scale(0); }
        .form-container form .form-group-text input:valid + span {
          -webkit-transform: scale(0);
                  transform: scale(0); }
        .form-container form .form-group-text input.error-shadow {
          box-shadow: 0 0 5px #FF001F; }
      .form-container form .form-group-text:before {
        content: '';
        position: absolute;
        width: 27px;
        height: 30px;
        top: 10px;
        left: -40px; }
      .form-container form .form-group-text.name:before {
        background: url(../img/name-ico.png) no-repeat; }
      .form-container form .form-group-text.phone {
        margin-bottom: 16px; }
        .form-container form .form-group-text.phone:before {
          background: url(../img/phone-ico.png) no-repeat; }
    .form-container form .send {
      background: #ff6600;
      color: #fff;
      height: 54px;
      line-height: 54px;
      width: 180px;
      border: none;
      padding: 0;
      font-size: 24px;
      border-radius: 3px;
      cursor: pointer;
      font-family: MyriadPro, serif;
      -webkit-transition: 0.5s;
      transition: 0.5s; }
      .form-container form .send:hover {
        background: #cc5200; }
    .form-container form .form-group-hours {
      position: relative;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
      -ms-flex-pack: distribute;
          justify-content: space-around;
      margin: 25px 0 35px 0; }
      .form-container form .form-group-hours label {
        width: 50%;
        text-align: left;
        cursor: pointer;
        padding-left: 15px;
        line-height: 26px; }
        .form-container form .form-group-hours label input {
          display: none; }
          .form-container form .form-group-hours label input + span {
            width: 12px;
            height: 12px;
            border: 1px solid #d3e2e5;
            border-radius: 100%;
            display: inline-block;
            vertical-align: middle;
            margin-right: 10px; }
          .form-container form .form-group-hours label input:checked + span {
            background: #d3e2e5; }
      .form-container form .form-group-hours .error {
        bottom: -12px; }
    @media all and (max-width: 360px) {
      .form-container form {
        width: 75%; } }
  @media all and (max-width: 460px) {
    .form-container {
      width: 95%; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
